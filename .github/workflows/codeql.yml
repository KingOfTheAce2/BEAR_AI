name: CodeQL Security Analysis

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 360

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript-typescript', 'rust']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (for JavaScript/TypeScript analysis)
        if: matrix.language == 'javascript-typescript'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node dependencies
        if: matrix.language == 'javascript-typescript'
        run: |
          npm ci --prefer-offline --no-audit || npm install --force
        continue-on-error: false

      - name: Setup Rust (for Rust analysis)
        if: matrix.language == 'rust'
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          source-root: ${{ matrix.language == 'javascript-typescript' && '.' || 'src-tauri' }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        if: matrix.language == 'rust'

      - name: Build TypeScript/JavaScript manually
        if: matrix.language == 'javascript-typescript'
        run: |
          npm run build || npm run build:alpha
        env:
          SKIP_PREFLIGHT_CHECK: true
          GENERATE_SOURCEMAP: false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          upload: true
          output: codeql-results-${{ matrix.language }}.sarif

      - name: Upload CodeQL results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: codeql-results-${{ matrix.language }}
          path: codeql-results-${{ matrix.language }}.sarif
          retention-days: 30

      - name: CodeQL Analysis Summary
        if: always()
        run: |
          echo "## CodeQL Analysis Complete for ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
          echo "Language: **${{ matrix.language }}**" >> $GITHUB_STEP_SUMMARY
          echo "Analysis completed at $(date)" >> $GITHUB_STEP_SUMMARY
          if [ -f "codeql-results-${{ matrix.language }}.sarif" ]; then
            echo "SARIF results generated successfully" >> $GITHUB_STEP_SUMMARY
          fi

  report:
    name: Security Report
    runs-on: ubuntu-latest
    needs: analyze
    if: always()

    steps:
      - name: Download all CodeQL artifacts
        uses: actions/download-artifact@v4
        with:
          path: codeql-results/

      - name: Generate Security Summary
        run: |
          echo "## CodeQL Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "### Analysis completed for:" >> $GITHUB_STEP_SUMMARY
          echo "- **JavaScript/TypeScript**: Frontend React application" >> $GITHUB_STEP_SUMMARY
          echo "- **Rust**: Backend Tauri application" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Results uploaded to GitHub Security tab" >> $GITHUB_STEP_SUMMARY
          echo "Check the Security tab in your repository for detailed findings." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Review any security alerts in the Security tab" >> $GITHUB_STEP_SUMMARY
          echo "2. Address high and critical severity findings" >> $GITHUB_STEP_SUMMARY
          echo "3. Consider implementing additional security measures" >> $GITHUB_STEP_SUMMARY