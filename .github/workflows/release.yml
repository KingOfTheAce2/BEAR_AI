name: Production Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  actions: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  SKIP_PREFLIGHT_CHECK: true
  GENERATE_SOURCEMAP: false

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            build_cmd: cargo build --release --target x86_64-pc-windows-msvc
            artifact_path: target/x86_64-pc-windows-msvc/release/*.exe
          - name: macOS
            os: macos-latest
            target: x86_64-apple-darwin
            build_cmd: cargo build --release --target x86_64-apple-darwin
            artifact_path: target/x86_64-apple-darwin/release/bear-ai
          - name: Linux
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            build_cmd: cargo build --release --target x86_64-unknown-linux-gnu
            artifact_path: target/x86_64-unknown-linux-gnu/release/bear-ai

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
            node_modules/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev \
            libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit || npm install --force

      - name: Build frontend
        run: npm run build
        continue-on-error: true

      - name: Build application
        working-directory: src-tauri
        run: ${{ matrix.platform.build_cmd }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}-release
          path: src-tauri/${{ matrix.platform.artifact_path }}
          retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}