name: Security Audit

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:
  push:
    paths:
      - 'package*.json'
      - 'src-tauri/Cargo.toml'
      - 'src-tauri/Cargo.lock'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Install dependencies
        run: |
          # Validate package.json first
          node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))" || {
            echo "Invalid package.json detected, attempting to fix..."
            exit 1
          }

          # Try npm ci first, fallback to npm install if package-lock.json is corrupted
          npm ci || {
            echo "npm ci failed, falling back to npm install..."
            rm -f package-lock.json
            npm install --package-lock-only
            npm ci
          }

      - name: Run npm security audit
        id: npm-audit
        continue-on-error: true
        run: |
          npm audit --audit-level high --json > npm-audit-results.json || echo "NPM audit completed with issues"
          npm audit --audit-level high || echo "NPM audit found vulnerabilities"

      - name: Run Rust security audit
        id: cargo-audit
        continue-on-error: true
        working-directory: src-tauri
        run: |
          cargo audit --json > ../cargo-audit-results.json || echo "Cargo audit completed with issues"
          cargo audit || echo "Cargo audit found vulnerabilities"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: trivy-scan
        continue-on-error: true
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '0'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && steps.trivy-scan.outcome == 'success'
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: HEAD~1
          head: HEAD

      - name: Generate security report
        if: always()
        run: |
          echo "# 🛡️ Security Audit Report" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # NPM Audit Results
          if [[ "${{ steps.npm-audit.outcome }}" == "success" ]]; then
            echo "✅ **NPM Audit:** No high/critical vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **NPM Audit:** Vulnerabilities detected - check logs" >> $GITHUB_STEP_SUMMARY
          fi

          # Cargo Audit Results
          if [[ "${{ steps.cargo-audit.outcome }}" == "success" ]]; then
            echo "✅ **Cargo Audit:** No vulnerabilities found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Cargo Audit:** Vulnerabilities detected - check logs" >> $GITHUB_STEP_SUMMARY
          fi

          # Trivy Scan Results
          if [[ "${{ steps.trivy-scan.outcome }}" == "success" ]]; then
            echo "✅ **Trivy Scan:** Results uploaded to Security tab" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Trivy Scan:** Failed to generate results" >> $GITHUB_STEP_SUMMARY
          fi

          echo "✅ **Secret Scan:** Completed" >> $GITHUB_STEP_SUMMARY

          # File existence check
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📁 Generated Files" >> $GITHUB_STEP_SUMMARY
          if [[ -f "npm-audit-results.json" ]]; then
            echo "✅ npm-audit-results.json" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ npm-audit-results.json" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ -f "cargo-audit-results.json" ]]; then
            echo "✅ cargo-audit-results.json" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ cargo-audit-results.json" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ -f "trivy-results.sarif" ]]; then
            echo "✅ trivy-results.sarif" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ trivy-results.sarif" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-audit-results
          path: |
            npm-audit-results.json
            cargo-audit-results.json
            trivy-results.sarif
          retention-days: 30
          if-no-files-found: ignore