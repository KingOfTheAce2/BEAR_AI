name: Security Audit & Vulnerability Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # Daily security scan
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # NPM Security Audit
  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate || true
          npm audit fix --force || true
          npm audit --json > npm-audit.json || true

      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: npm-audit.json
          retention-days: 30

  # Rust Security Audit
  rust-audit:
    name: Rust Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run cargo audit
        working-directory: ./src-tauri
        run: |
          cargo audit || true
          cargo audit --json > cargo-audit.json || true

      - name: Upload cargo audit results
        uses: actions/upload-artifact@v4
        with:
          name: cargo-audit-results
          path: src-tauri/cargo-audit.json
          retention-days: 30

  # CodeQL Analysis
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']  # JavaScript includes TypeScript scanning
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  # Dependency Review
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0

  # OWASP Dependency Check
  owasp-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'BEAR_AI'
          path: '.'
          format: 'HTML,JSON'
          args: >
            --enableRetired
            --enableExperimental

      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-results
          path: reports/
          retention-days: 30

  # Trivy Security Scan
  trivy-scan:
    name: Trivy Security Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # Snyk Security Scan
  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects

  # Security Scorecard
  scorecard:
    name: Security Scorecard Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Run analysis
        uses: ossf/scorecard-action@v2.3.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  # License Scan
  license-scan:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          license-checker --summary --excludePrivatePackages > license-report.txt
          cat license-report.txt

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.txt
          retention-days: 30

  # Secret Scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security Summary
  security-summary:
    name: Security Summary Report
    runs-on: ubuntu-latest
    needs: [npm-audit, rust-audit, codeql, trivy-scan]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: security-artifacts

      - name: Generate Security Report
        run: |
          echo "# Security Scan Summary" > SECURITY_REPORT.md
          echo "Date: $(date)" >> SECURITY_REPORT.md
          echo "" >> SECURITY_REPORT.md

          echo "## NPM Audit Results" >> SECURITY_REPORT.md
          if [ -f security-artifacts/npm-audit-results/npm-audit.json ]; then
            echo "NPM vulnerabilities found. Check artifacts for details." >> SECURITY_REPORT.md
          else
            echo "No NPM audit results available." >> SECURITY_REPORT.md
          fi
          echo "" >> SECURITY_REPORT.md

          echo "## Rust Audit Results" >> SECURITY_REPORT.md
          if [ -f security-artifacts/cargo-audit-results/cargo-audit.json ]; then
            echo "Cargo audit complete. Check artifacts for details." >> SECURITY_REPORT.md
          else
            echo "No Cargo audit results available." >> SECURITY_REPORT.md
          fi
          echo "" >> SECURITY_REPORT.md

          echo "## Security Recommendations" >> SECURITY_REPORT.md
          echo "1. Review and fix all HIGH and CRITICAL vulnerabilities" >> SECURITY_REPORT.md
          echo "2. Update dependencies regularly" >> SECURITY_REPORT.md
          echo "3. Enable Dependabot for automatic updates" >> SECURITY_REPORT.md
          echo "4. Review security alerts in GitHub Security tab" >> SECURITY_REPORT.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-summary-report
          path: SECURITY_REPORT.md
          retention-days: 90

      - name: Comment PR with security status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('SECURITY_REPORT.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });