name: Comprehensive Security Audit

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 4 * * 0' # Weekly on Sunday at 4 AM UTC
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-audit:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit || npm install --force

      - name: Run npm audit
        run: |
          echo "## NPM Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit --production >> $GITHUB_STEP_SUMMARY 2>&1 || true
        continue-on-error: true

      - name: Run dependency check
        run: |
          echo "## Dependency Vulnerabilities" >> $GITHUB_STEP_SUMMARY
          npx better-npm-audit audit --production >> $GITHUB_STEP_SUMMARY 2>&1 || true
        continue-on-error: true

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run cargo audit
        working-directory: src-tauri
        run: |
          echo "## Rust Security Audit" >> $GITHUB_STEP_SUMMARY
          cargo audit >> $GITHUB_STEP_SUMMARY 2>&1 || true
        continue-on-error: true

      - name: Run basic Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-basic-results.sarif'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln'
          skip-dirs: 'node_modules,dist,build,target'
        continue-on-error: true

      - name: Upload basic Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-basic-results.sarif'
          category: 'trivy-basic-audit'
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
        continue-on-error: true

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'BEAR_AI'
          path: '.'
          format: 'HTML'
          args: >
            --enableRetired
            --enableExperimental
        continue-on-error: true

      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        with:
          name: owasp-report
          path: reports/
          retention-days: 30
        continue-on-error: true

      - name: Security Summary
        if: always()
        run: |
          echo "## 🔒 Comprehensive Security Audit Complete" >> $GITHUB_STEP_SUMMARY
          echo "### Security Checks Performed:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ NPM security audit" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Rust cargo audit" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Trivy vulnerability scanning" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TruffleHog secret detection" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ OWASP dependency check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Additional Security Workflows:" >> $GITHUB_STEP_SUMMARY
          echo "- **CodeQL Analysis**: Advanced static analysis for JavaScript/TypeScript and Rust" >> $GITHUB_STEP_SUMMARY
          echo "- **Trivy Deep Scan**: Comprehensive vulnerability and configuration scanning" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 How to Review Results:" >> $GITHUB_STEP_SUMMARY
          echo "1. Check the Security tab in your GitHub repository" >> $GITHUB_STEP_SUMMARY
          echo "2. Review workflow artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY
          echo "3. Address any HIGH or CRITICAL severity findings" >> $GITHUB_STEP_SUMMARY
          echo "4. Monitor dependency updates for security patches" >> $GITHUB_STEP_SUMMARY