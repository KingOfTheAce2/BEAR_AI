name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Unit and Integration Tests
  test-unit-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type checking
      run: npm run typecheck
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  # Performance Tests
  test-performance:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run performance tests
      run: npm run test:performance
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: test-results/

  # Accessibility Tests
  test-accessibility:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run accessibility tests
      run: npm run test:a11y
    
    - name: Upload accessibility results
      uses: actions/upload-artifact@v3
      with:
        name: accessibility-results
        path: test-results/

  # End-to-End Tests
  test-e2e:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npm run playwright:install
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E tests
      run: npm run test:e2e
    
    - name: Upload E2E results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-results
        path: |
          test-results/
          playwright-report/
    
    - name: Upload E2E videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-videos
        path: test-results/videos/

  # Cross-browser E2E Tests (on main branch only)
  test-e2e-cross-browser:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npm run playwright:install
    
    - name: Build application
      run: npm run build
    
    - name: Run E2E tests on ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }}
    
    - name: Upload results for ${{ matrix.browser }}
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-results-${{ matrix.browser }}
        path: test-results/

  # Test Report Generation
  test-report:
    needs: [test-unit-integration, test-performance, test-accessibility, test-e2e]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Generate test report
      run: |
        echo "# Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Test Suite Status" >> test-summary.md
        echo "- Unit/Integration Tests: ${{ needs.test-unit-integration.result }}" >> test-summary.md
        echo "- Performance Tests: ${{ needs.test-performance.result }}" >> test-summary.md
        echo "- Accessibility Tests: ${{ needs.test-accessibility.result }}" >> test-summary.md
        echo "- E2E Tests: ${{ needs.test-e2e.result }}" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Artifacts" >> test-summary.md
        echo "- Coverage reports available in artifacts" >> test-summary.md
        echo "- E2E videos and screenshots available in artifacts" >> test-summary.md
        echo "- Performance benchmarks available in artifacts" >> test-summary.md
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const testSummary = fs.readFileSync('test-summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: testSummary
          });

  # Security and Quality Checks
  security-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for outdated packages
      run: npm outdated || true
    
    - name: Bundle size check
      run: |
        npm run build
        npx bundlesize --enable
      continue-on-error: true