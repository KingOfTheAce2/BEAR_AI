name: Windows Quick Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  SKIP_PREFLIGHT_CHECK: true
  GENERATE_SOURCEMAP: false
  TSC_COMPILE_ON_ERROR: true
  CARGO_INCREMENTAL: 1
  CARGO_NET_RETRY: 10

jobs:
  build:
    name: Quick Windows Build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Cache dependencies (multi-layer)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
            node_modules/
            ~/.npm
            %LOCALAPPDATA%\npm-cache
            %USERPROFILE%\.cargo
          key: ${{ runner.os }}-windows-ultra-fast-${{ hashFiles('**/Cargo.lock', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-windows-ultra-fast-
            ${{ runner.os }}-windows-quick-
            ${{ runner.os }}-prod-fast-
            ${{ runner.os }}-

      - name: Install dependencies (ultra-optimized)
        shell: bash
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set prefer-offline true
          npm config set audit false
          npm config set fund false
          npm ci --prefer-offline --no-audit --ignore-scripts --no-fund --silent || npm install --no-audit --force --legacy-peer-deps --silent

      - name: TypeScript compilation check
        run: npm run typecheck:alpha

      - name: Build frontend (fast)
        run: npm run build:alpha-fast
        continue-on-error: true

      - name: Build Windows bundle (direct cargo)
        shell: bash
        run: |
          cd src-tauri
          export CARGO_PROFILE_RELEASE_FAST_LTO=false
          export CARGO_PROFILE_RELEASE_FAST_CODEGEN_UNITS=16
          export CARGO_PROFILE_RELEASE_FAST_PANIC=abort
          # Windows-specific build without macOS dependencies
          cargo build --release --target x86_64-pc-windows-msvc || cargo build --release

      - name: Upload Windows artifacts (compressed)
        uses: actions/upload-artifact@v4
        with:
          name: windows-ultra-fast-build-${{ github.sha }}
          path: |
            src-tauri/target/release-fast/bundle/**/*.exe
            src-tauri/target/release-fast/bundle/**/*.msi
          retention-days: 3
          if-no-files-found: warn
          compression-level: 1

      - name: Comment build availability on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const message = `üöÄ Windows quick build is available for download.\n\n‚û°Ô∏è View artifacts: https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
