name: Windows Quick Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  SKIP_PREFLIGHT_CHECK: true
  GENERATE_SOURCEMAP: false
  TSC_COMPILE_ON_ERROR: true
  CARGO_INCREMENTAL: 1
  CARGO_NET_RETRY: 10

jobs:
  build:
    name: Quick Windows Build
    runs-on: windows-2022

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Free disk space
        shell: bash
        run: |
          # Remove unnecessary files to prevent disk space issues
          rm -rf /tmp/* 2>/dev/null || true
          docker system prune -af 2>/dev/null || true
          # Clear Windows Update cache if possible
          powershell -Command "Get-ChildItem -Path 'C:\Windows\SoftwareDistribution\Download\*' -ErrorAction SilentlyContinue | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue" || true

      - name: Cache dependencies (optimized for disk space)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            node_modules/
          key: ${{ runner.os }}-windows-disk-optimized-${{ hashFiles('**/Cargo.lock', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-windows-disk-optimized-
            ${{ runner.os }}-windows-

      - name: Install dependencies (ultra-optimized)
        shell: bash
        run: |
          npm config set registry https://registry.npmjs.org/
          npm config set prefer-offline true
          npm config set audit false
          npm config set fund false
          npm ci --prefer-offline --no-audit --ignore-scripts --no-fund --silent || npm install --no-audit --force --legacy-peer-deps --silent

      - name: TypeScript compilation check
        run: npm run typecheck:alpha

      - name: Build frontend (fast)
        run: npm run build:alpha-fast
        continue-on-error: true

      - name: Check disk space before build
        shell: bash
        run: |
          df -h
          echo "Available disk space before build:"
          wmic logicaldisk get size,freespace,caption 2>/dev/null || echo "Could not check Windows disk space"

      - name: Clean Rust artifacts
        shell: bash
        run: |
          cd src-tauri
          cargo clean || true
          rm -rf target/ || true

      - name: Build Windows bundle (emergency minimal)
        shell: bash
        run: |
          cd src-tauri
          # Use minimal features to reduce build size and time
          export CARGO_INCREMENTAL=0
          export CARGO_NET_RETRY=3
          export RUSTFLAGS="-C target-cpu=native"

          # Try minimal build first
          cargo check --no-default-features || echo "Minimal check failed"

          # Attempt build with minimal features
          if [ -f "Cargo.minimal.toml" ]; then
            cp Cargo.minimal.toml Cargo.toml.temp
            mv Cargo.toml Cargo.toml.full
            mv Cargo.toml.temp Cargo.toml
          fi

          cargo build --release --no-default-features || cargo build --release

      - name: Upload Windows artifacts (compressed)
        uses: actions/upload-artifact@v4
        with:
          name: windows-ultra-fast-build-${{ github.sha }}
          path: |
            src-tauri/target/release-fast/bundle/**/*.exe
            src-tauri/target/release-fast/bundle/**/*.msi
          retention-days: 3
          if-no-files-found: warn
          compression-level: 1

      - name: Comment build availability on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const message = `üöÄ Windows quick build is available for download.\n\n‚û°Ô∏è View artifacts: https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
