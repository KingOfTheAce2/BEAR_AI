{
  "name": "bear-ai-gui",
  "version": "1.0.0",
  "description": "BEAR AI Legal Assistant - Unified Professional React application for legal document analysis and AI-powered assistance with comprehensive API",
  "private": true,
  "dependencies": {
    "@heroicons/react": "^2.1.5",
    "@tailwindcss/forms": "^0.5.9",
    "@tailwindcss/typography": "^0.5.15",
    "@tauri-apps/api": "^1.6.0",
    "clsx": "^2.1.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "express": "^4.21.0",
    "helmet": "^8.0.0",
    "js-yaml": "^4.1.0",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.446.0",
    "multer": "^1.4.5-lts.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.26.2",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "tailwind-merge": "^2.5.2",
    "typescript": "^4.9.5",
    "uuid": "^10.0.0",
    "web-vitals": "^4.2.3",
    "ws": "^8.18.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.47.2",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.13",
    "@types/js-yaml": "^4.0.9",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.5.5",
    "@types/react": "^18.3.8",
    "@types/react-dom": "^18.3.0",
    "@types/supertest": "^6.0.2",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.5.12",
    "autoprefixer": "^10.4.20",
    "concurrently": "^9.0.1",
    "cross-env": "^7.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^9.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "nodemon": "^3.1.4",
    "postcss": "^8.4.47",
    "react-scripts": "^5.0.1",
    "supertest": "^7.0.0",
    "tailwindcss": "^3.4.12",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "which": "^5.0.0"
  },
  "scripts": {
    "start": "npx react-scripts start",
    "build": "npx react-scripts build",
    "build:unified": "react-scripts build",
    "build:with-typecheck": "npm run typecheck:build && react-scripts build",
    "build:alpha": "set SKIP_PREFLIGHT_CHECK=true && set GENERATE_SOURCEMAP=false && react-scripts build",
    "build:alpha-fast": "set SKIP_PREFLIGHT_CHECK=true && set GENERATE_SOURCEMAP=false && set TSC_COMPILE_ON_ERROR=true && react-scripts build",
    "test": "ts-node tests/scripts/test-runner.ts",
    "test:unit": "jest --config tests/jest.config.js --testPathPattern=tests/unit",
    "test:integration": "jest --config tests/jest.config.js --testPathPattern=tests/integration",
    "test:e2e": "playwright test --config tests/playwright.config.ts",
    "test:performance": "jest --config tests/jest.config.js --testPathPattern=tests/performance",
    "test:a11y": "jest --config tests/jest.config.js --testPathPattern=tests/accessibility",
    "test:watch": "jest --config tests/jest.config.js --watch",
    "test:ci": "jest --config tests/jest.config.js --ci --coverage --watchAll=false",
    "test:e2e:headed": "playwright test --config tests/playwright.config.ts --headed",
    "test:e2e:debug": "playwright test --config tests/playwright.config.ts --debug",
    "coverage:report": "ts-node tests/scripts/coverage-report.ts",
    "playwright:install": "playwright install",
    "test:api": "jest --config jest.api.config.js",
    "test:coverage": "jest --config tests/jest.config.js --coverage",
    "test:api:coverage": "jest --config jest.api.config.js --coverage",
    "eject": "react-scripts eject",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "lint:alpha": "echo 'Skipping ESLint for alpha build'",
    "typecheck": "tsc --noEmit --skipLibCheck",
    "typecheck:strict": "tsc --noEmit",
    "typecheck:build": "tsc --project tsconfig.build.json --noEmit",
    "typecheck:alpha": "echo 'Skipping TypeScript checking for alpha build'",
    "format": "prettier --write \"src/**/*.{ts,tsx,css,scss,md}\"",
    "analyze": "npm run build && npx bundle-analyzer build/static/js/*.js",
    "dev": "npm start",
    "dev:api": "nodemon src/api/server.ts",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:api\"",
    "preview": "npm run build && npx serve -s build",
    "api:docs": "node -e \"console.log('API Documentation: http://localhost:3001/api/docs')\"",
    "api:test": "npm run test:api",
    "postbuild": "npm run api:docs",
    "install:bear-ai": "node scripts/install-bear-ai.js",
    "install:bear-ai:verbose": "node scripts/install-bear-ai.js --verbose",
    "install:bear-ai:dev": "node scripts/install-bear-ai.js --verbose --dev",
    "setup": "node scripts/install-bear-ai.js",
    "postinstall": "node -e \"console.log('\\n🐻 BEAR AI installed! Run: npm start\\n')\"",
    "fix-python": "node scripts/fix-python-deps.js",
    "cleanup-install": "node scripts/cleanup-installers.js",
    "windows-launcher": "node scripts/start-bear-ai.js",
    "tauri": "tauri",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "tauri:build:debug": "tauri build --debug",
    "tauri:build:production": "node scripts/build-production.js",
    "tauri:build:platform": "node scripts/build-production.js --platform",
    "tauri:build:optimize": "./scripts/optimize-build.sh",
    "tauri:build:fast": "tauri build --config src-tauri/tauri.conf.json --profile release-fast",
    "tauri:build:alpha": "npm run build:alpha && tauri build --config src-tauri/tauri.conf.alpha.json",
    "tauri:build:alpha-fast": "npm run build:alpha-fast && tauri build --config src-tauri/tauri.conf.alpha.json --profile release-fast",
    "build:complete": "npm run build:unified && npm run tauri:build:production && npm run tauri:build:optimize",
    "build:verify": "node scripts/verify-build-config.js",
    "build:validate": "npm run build:verify && npm run typecheck && npm run lint"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "keywords": [
    "legal",
    "ai",
    "assistant",
    "react",
    "typescript",
    "tailwindcss",
    "bear-ai",
    "api",
    "openapi",
    "swagger",
    "rest",
    "authentication",
    "jwt",
    "rate-limiting",
    "validation"
  ],
  "author": "BEAR AI Team",
  "license": "PROPRIETARY",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/bear-ai"
  },
  "bugs": {
    "url": "https://github.com/your-org/bear-ai/issues"
  },
  "homepage": "https://bear-ai.com"
}
