# CI/CD Integration Configuration for BEAR AI Windows Signing
# This file defines the integration points between CI/CD systems and signing processes

version: "1.0"

# Environment Configuration
environments:
  local:
    description: "Local development environment"
    signing:
      enabled: false
      script: "scripts/windows-signing.ps1"
      parameters:
        - "-SkipValidation"
    defender:
      configure: true
      script: "scripts/windows-defender-config.ps1"

  ci:
    description: "Continuous Integration environment"
    signing:
      enabled: true
      script: "scripts/windows-signing.ps1"
      parameters:
        - "-LogLevel INFO"
    defender:
      configure: true
      script: "scripts/windows-defender-config.ps1"
      parameters:
        - "-Verbose"

  production:
    description: "Production release environment"
    signing:
      enabled: true
      required: true
      script: "scripts/windows-signing.ps1"
      parameters:
        - "-LogLevel INFO"
      validation:
        enabled: true
        verify_signatures: true
    defender:
      configure: true
      script: "scripts/windows-defender-config.ps1"

# Pipeline Stages
stages:
  - name: "preparation"
    description: "Environment preparation and dependency installation"
    steps:
      - name: "setup-environment"
        script: "scripts/build-pipeline.ps1"
        parameters: ["-SkipSigning", "-SkipTests"]

  - name: "build"
    description: "Application building and compilation"
    steps:
      - name: "compile-application"
        script: "scripts/build-pipeline.ps1"
        parameters: ["-Configuration Release", "-SkipSigning"]

  - name: "test"
    description: "Testing and quality assurance"
    steps:
      - name: "run-tests"
        script: "npm run test:ci"
      - name: "rust-tests"
        script: "cd src-tauri && cargo test"

  - name: "sign"
    description: "Code signing and security verification"
    condition: "signing.enabled == true"
    steps:
      - name: "code-signing"
        script: "scripts/windows-signing.ps1"
        environment_variables:
          - "WINDOWS_CERTIFICATE_PATH"
          - "WINDOWS_CERTIFICATE_PASSWORD"
          - "WINDOWS_CERTIFICATE_BASE64"
        artifacts:
          - "src-tauri/target/release/bundle/**/*.exe"
          - "src-tauri/target/release/bundle/**/*.msi"

  - name: "package"
    description: "Release packaging and artifact creation"
    steps:
      - name: "create-release"
        script: "scripts/build-pipeline.ps1"
        parameters: ["-CreateRelease"]

  - name: "deploy"
    description: "Deployment and distribution"
    condition: "environment == 'production'"
    steps:
      - name: "upload-artifacts"
        type: "github-release"
        artifacts:
          - "*.zip"
          - "release/*.msi"
          - "release/*.exe"

# Secret Management
secrets:
  required:
    - name: "WINDOWS_CERTIFICATE_BASE64"
      description: "Base64 encoded code signing certificate"
      environments: ["ci", "production"]
    - name: "WINDOWS_CERTIFICATE_PASSWORD"
      description: "Password for code signing certificate"
      environments: ["ci", "production"]
    - name: "TAURI_PRIVATE_KEY"
      description: "Private key for Tauri updates"
      environments: ["ci", "production"]
    - name: "TAURI_KEY_PASSWORD"
      description: "Password for Tauri private key"
      environments: ["ci", "production"]

  optional:
    - name: "CERTIFICATE_SUBJECT"
      description: "Certificate subject name for signing"
    - name: "TIMESTAMP_URL"
      description: "Custom timestamp server URL"
      default: "http://timestamp.digicert.com"

# Artifact Configuration
artifacts:
  signing:
    patterns:
      - "**/*.exe"
      - "**/*.msi"
      - "**/*.msix"
      - "**/*.dll"
    validation:
      verify_signatures: true
      check_certificates: true
    retention:
      days: 90

  releases:
    patterns:
      - "*.zip"
      - "release/*.msi"
      - "release/*.exe"
      - "latest.json"
    retention:
      days: 365

# Integration Points
integrations:
  github_actions:
    workflow_file: ".github/workflows/windows-release.yml"
    triggers:
      - "push.tags.v*"
      - "workflow_dispatch"
    matrix:
      target: ["x86_64-pc-windows-msvc"]
      arch: ["x64"]

  azure_devops:
    pipeline_file: "azure-pipelines.yml"
    pool: "windows-latest"
    variables:
      - group: "BEAR-AI-Signing"

  jenkins:
    pipeline_file: "Jenkinsfile"
    agent: "windows"
    credentials:
      - id: "bear-ai-certificate"
        type: "secret-file"

# Monitoring and Notifications
monitoring:
  build_status:
    webhook_url: "${WEBHOOK_URL}"
    on_success: true
    on_failure: true

  signing_status:
    webhook_url: "${SIGNING_WEBHOOK_URL}"
    on_success: true
    on_failure: true
    include_certificate_info: false

# Security Configuration
security:
  code_signing:
    algorithm: "SHA256"
    timestamp_required: true
    certificate_validation: true

  windows_defender:
    auto_configure: true
    exclusions:
      paths:
        - "${INSTALL_DIR}"
        - "${APPDATA}\\BEAR AI"
      processes:
        - "bear-ai-legal-assistant.exe"
      extensions:
        - ".bearai"
        - ".baitemp"

# Quality Gates
quality_gates:
  build:
    test_coverage: 80
    linting_errors: 0
    compilation_warnings: 0

  signing:
    signature_verification: required
    certificate_chain_validation: required
    timestamp_verification: required

# Rollback Configuration
rollback:
  triggers:
    - "signature_verification_failed"
    - "installation_failure_rate > 10%"

  actions:
    - "stop_deployment"
    - "notify_team"
    - "revert_to_previous_version"

# Documentation
documentation:
  build_process: "docs/build-process.md"
  signing_guide: "docs/windows-signing.md"
  troubleshooting: "docs/troubleshooting.md"
  ci_cd_setup: "docs/ci-cd-setup.md"