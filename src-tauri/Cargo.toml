[package]
name = "bear-ai-legal-assistant"
version = "1.0.0"
description = "BEAR AI Legal Assistant - Professional AI-powered legal document analysis"
authors = ["BEAR AI Team"]
license = "PROPRIETARY"
repository = "https://github.com/KingOfTheAce2/BEAR_AI"
edition = "2021"
rust-version = "1.70"

[build-dependencies]
tauri-build = { version = "1", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.6.8", default-features = false, features = ["system-tray", "updater", "api-all", "fs-all", "path-all", "process-all", "shell-open", "dialog-all", "notification-all", "window-all"] }
tokio = { version = "1.0", features = ["full"] }
anyhow = "1.0"
log = "0.4"
env_logger = "0.10"
dirs = "5.0"
chrono = { version = "0.4", features = ["serde"] }
sqlite = "0.32"
sha2 = "0.10"
bcrypt = "0.15"
walkdir = "2.4"
mime_guess = "2.0"
tokio-stream = "0.1"
reqwest = { version = "0.12", features = ["json", "stream"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
regex = "1.0"
sys-info = "0.9"
aes-gcm = "0.10"
ring = "0.17"
base64 = "0.22"
rsa = "0.9"
x509-parser = "0.16"
jsonwebtoken = "9.0"
hardware-id = "0.3"
hex = "0.4"
# Performance optimization dependencies
flate2 = "1.0"
lz4 = "1.24"
rayon = "1.8"
# Security dependencies
rand = "0.8"
webpki = "0.22"
# System integration
windows = { version = "0.48", features = ["Win32_Foundation", "Win32_System_Com", "Win32_UI_Shell"] }
[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25"
objc = "0.2"
# NVIDIA Nemotron RAG dependencies
futures = "0.3"
bytes = "1.0"
md5 = "0.7"
zip = "0.6"
tar = "0.4"
once_cell = "1.19"
parking_lot = "0.12"
num_cpus = "1.16"
sysinfo = "0.30"
lazy_static = "1.4"

# Vector database clients
qdrant-client = { version = "1.5", optional = true }
lance = { version = "0.8", optional = true }
arrow = { version = "45.0", optional = true }

# Machine learning and embeddings
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
candle-transformers = { version = "0.3", optional = true }
tokenizers = { version = "0.14", optional = true }

# Caching and performance
redis = { version = "0.23", features = ["tokio-comp"], optional = true }
lru = "0.12"

# GPU detection dependencies
nvml-wrapper = { version = "0.9", optional = true }
metal = { version = "0.28", optional = true }
# Document format support
calamine = "0.24"  # Excel/CSV reading
xml-rs = "0.8"     # XML parsing for Office formats
csv = "1.3"        # CSV processing
# Language detection and NLP
whatlang = "0.16"  # Language detection
lopdf = "0.32"     # PDF parsing
# PDF generation and export
printpdf = "0.7"   # PDF generation
pdf-extract = "0.7" # PDF text extraction
# OCR and image processing
image = "0.24"     # Image processing
tempfile = "3.8"   # Temporary file handling
# Model format support
safetensors = "0.4"
bincode = "1.3"
postcard = "1.0"
# Text processing and NLP (using built-in implementations)
# stop-words = "0.8"  # Stop words for text processing
# stemmer = "0.1"     # Word stemming
# Stripe payment integration
# stripe = "0.23" # Removed - not available on crates.io, using REST API instead
serde_urlencoded = "0.7"
hmac = "0.12"
tokio-tungstenite = "0.20"
futures-util = "0.3"

[features]
default = ["headless", "gpu-detection", "qdrant", "nemotron-rag"]
headless = []
custom-protocol = ["tauri/custom-protocol"]
desktop = ["custom-protocol"]

# NVIDIA Nemotron RAG features
nemotron-rag = ["qdrant", "gpu", "cache"]
qdrant = ["dep:qdrant-client"]
lance = ["dep:lance", "dep:arrow"]
all-databases = ["qdrant", "lance"]

# Machine learning features
gpu = ["dep:candle-core", "dep:candle-nn", "dep:candle-transformers", "dep:tokenizers"]
embedding = ["gpu"]

# Caching
cache = ["dep:redis"]

# GPU detection
gpu-detection = ["nvml-wrapper", "metal"]

# Full RAG system with all features
full-rag = ["nemotron-rag", "all-databases", "embedding", "cache"]

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
opt-level = "s"
strip = true
# Additional optimizations for production
debug = false
debug-assertions = false
overflow-checks = false
rpath = false

[profile.release-fast]
inherits = "release"
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"

[profile.alpha]
inherits = "release"
opt-level = 2
lto = "thin"
codegen-units = 4
panic = "abort"
debug = false
debug-assertions = false
overflow-checks = false
strip = true

[profile.dev]
opt-level = 1
debug = true
split-debuginfo = "unpacked"
