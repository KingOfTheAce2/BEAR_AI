import React from 'react';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { SystemStatus } from '../../types';\nimport {\n  WifiIcon,\n  ShieldCheckIcon,\n  ClockIcon,\n  CpuChipIcon\n} from '@heroicons/react/24/outline';\nimport { cn } from '../../utils/cn';\n\ninterface UnifiedStatusBarProps {\n  systemStatus: SystemStatus;\n}\n\nexport const UnifiedStatusBar: React.FC<UnifiedStatusBarProps> = ({ systemStatus }) => {\n  const { config } = useTheme();\n\n  const getConnectionStatus = () => {\n    switch (systemStatus.connection) {\n      case 'online':\n        return { icon: WifiIcon, color: 'text-green-500', text: 'Online' };\n      case 'offline':\n        return { icon: WifiIcon, color: 'text-red-500', text: 'Offline' };\n      case 'connecting':\n        return { icon: WifiIcon, color: 'text-yellow-500', text: 'Connecting...' };\n      default:\n        return { icon: WifiIcon, color: 'text-gray-500', text: 'Unknown' };\n    }\n  };\n\n  const getSecurityStatus = () => {\n    switch (systemStatus.security) {\n      case 'secure':\n        return { color: 'text-green-500', text: 'Secure Connection' };\n      case 'warning':\n        return { color: 'text-yellow-500', text: 'Security Warning' };\n      case 'insecure':\n        return { color: 'text-red-500', text: 'Insecure Connection' };\n      default:\n        return { color: 'text-gray-500', text: 'Security Unknown' };\n    }\n  };\n\n  const connectionStatus = getConnectionStatus();\n  const securityStatus = getSecurityStatus();\n  const ConnectionIcon = connectionStatus.icon;\n\n  return (\n    <div className=\"flex items-center justify-between h-full px-4 text-xs text-text-muted\">\n      {/* Left side - System status indicators */}\n      <div className=\"flex items-center space-x-4\">\n        {/* Connection Status */}\n        <div className=\"flex items-center space-x-1\">\n          <ConnectionIcon className={cn('w-3 h-3', connectionStatus.color)} />\n          <span>{connectionStatus.text}</span>\n        </div>\n\n        {/* Security Status */}\n        <div className=\"flex items-center space-x-1\">\n          <ShieldCheckIcon className={cn('w-3 h-3', securityStatus.color)} />\n          <span>{securityStatus.text}</span>\n        </div>\n\n        {/* Operations Status */}\n        {(systemStatus.operations.active > 0 || systemStatus.operations.queued > 0) && (\n          <div className=\"flex items-center space-x-1\">\n            <CpuChipIcon className=\"w-3 h-3 text-blue-500\" />\n            <span>\n              {systemStatus.operations.active} active\n              {systemStatus.operations.queued > 0 && `, ${systemStatus.operations.queued} queued`}\n            </span>\n          </div>\n        )}\n      </div>\n\n      {/* Center - Current time */}\n      <div className=\"flex items-center space-x-1\">\n        <ClockIcon className=\"w-3 h-3\" />\n        <span>{new Date().toLocaleTimeString()}</span>\n      </div>\n\n      {/* Right side - App version and theme info */}\n      <div className=\"flex items-center space-x-4\">\n        <span className=\"capitalize\">{config.theme} Theme</span>\n        <span>v{systemStatus.version}</span>\n      </div>\n    </div>\n  );\n};