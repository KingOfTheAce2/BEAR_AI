import React, { useState } from 'react';\nimport { useApp } from '../../contexts/AppContext';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport { ThemeSelector } from '../ui/ThemeSelector';\nimport {\n  MagnifyingGlassIcon,\n  Bars3Icon,\n  BellIcon,\n  UserCircleIcon,\n  ChevronDownIcon,\n  ArrowRightOnRectangleIcon\n} from '@heroicons/react/24/outline';\nimport { cn } from '../../utils/cn';\nimport { User } from '../../types';\n\ninterface UnifiedTopBarProps {\n  user: User | null;\n  onToggleSidebar: () => void;\n  searchQuery: string;\n  sidebarCollapsed: boolean;\n}\n\nexport const UnifiedTopBar: React.FC<UnifiedTopBarProps> = ({\n  user,\n  onToggleSidebar,\n  searchQuery,\n  sidebarCollapsed\n}) => {\n  const { state, setSearchQuery, logout } = useApp();\n  const { config } = useTheme();\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleLogout = () => {\n    setUserMenuOpen(false);\n    logout();\n  };\n\n  return (\n    <div className=\"flex items-center justify-between h-full px-4\">\n      {/* Left section - Menu toggle and search */}\n      <div className=\"flex items-center space-x-4 flex-1\">\n        <button\n          onClick={onToggleSidebar}\n          className=\"p-2 rounded-lg hover:bg-surface transition-colors\"\n          title={sidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\n        >\n          <Bars3Icon className=\"w-5 h-5 text-text-secondary\" />\n        </button>\n\n        {/* Global Search */}\n        <div className=\"relative flex-1 max-w-md\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <MagnifyingGlassIcon className={cn(\n              'w-4 h-4 transition-colors',\n              searchFocused ? 'text-primary' : 'text-text-muted'\n            )} />\n          </div>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            placeholder=\"Search documents, cases, or ask AI...\"\n            className={cn(\n              'block w-full pl-10 pr-3 py-2 border rounded-lg bg-background placeholder-text-muted transition-all duration-200',\n              'focus:ring-2 focus:border-transparent sm:text-sm',\n              searchFocused\n                ? 'border-primary ring-primary ring-opacity-20'\n                : 'border-border hover:border-text-muted'\n            )}\n            style={{\n              backgroundColor: `var(--color-background)`,\n              borderColor: searchFocused ? `var(--color-primary)` : `var(--color-border)`,\n              color: `var(--color-text-primary)`\n            }}\n          />\n          \n          {/* Search suggestions/results overlay could go here */}\n          {searchQuery && (\n            <div className=\"absolute top-full left-0 right-0 mt-1 bg-background border border-border rounded-lg shadow-lg z-50\">\n              <div className=\"p-3 text-sm text-text-muted\">\n                Press Enter to search or type more...\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Right section - Notifications, theme, and user menu */}\n      <div className=\"flex items-center space-x-2\">\n        {/* Notifications */}\n        <div className=\"relative\">\n          <button className=\"p-2 rounded-lg hover:bg-surface transition-colors relative\">\n            <BellIcon className=\"w-5 h-5 text-text-secondary\" />\n            {state.notifications.length > 0 && (\n              <span className=\"absolute top-1 right-1 w-2 h-2 bg-accent rounded-full\"></span>\n            )}\n          </button>\n        </div>\n\n        {/* Theme Selector */}\n        <ThemeSelector compact />\n\n        {/* User Menu */}\n        {user && (\n          <div className=\"relative\">\n            <button\n              onClick={() => setUserMenuOpen(!userMenuOpen)}\n              className=\"flex items-center space-x-2 p-2 rounded-lg hover:bg-surface transition-colors\"\n            >\n              <div className=\"w-8 h-8 bg-gradient-to-br from-accent to-primary rounded-full flex items-center justify-center text-white text-sm font-semibold\">\n                {user.name.charAt(0)}\n              </div>\n              <div className=\"hidden md:block text-left\">\n                <div className=\"text-sm font-medium text-text-primary\">{user.name}</div>\n                <div className=\"text-xs text-text-muted\">{user.role}</div>\n              </div>\n              <ChevronDownIcon className={cn(\n                'w-4 h-4 text-text-muted transition-transform',\n                userMenuOpen ? 'rotate-180' : ''\n              )} />\n            </button>\n\n            {/* User dropdown menu */}\n            {userMenuOpen && (\n              <>\n                <div \n                  className=\"fixed inset-0 z-10\" \n                  onClick={() => setUserMenuOpen(false)} \n                />\n                <div className=\"absolute right-0 top-full mt-2 w-56 bg-background border border-border rounded-lg shadow-lg z-20\">\n                  <div className=\"p-4 border-b border-border\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-10 h-10 bg-gradient-to-br from-accent to-primary rounded-full flex items-center justify-center text-white font-semibold\">\n                        {user.name.charAt(0)}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium text-text-primary truncate\">\n                          {user.name}\n                        </p>\n                        <p className=\"text-sm text-text-muted truncate\">\n                          {user.email}\n                        </p>\n                        {user.firm && (\n                          <p className=\"text-xs text-text-muted truncate\">\n                            {user.firm}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"p-2\">\n                    <button\n                      onClick={() => {\n                        setUserMenuOpen(false);\n                        // Navigate to profile settings\n                      }}\n                      className=\"w-full flex items-center space-x-2 px-3 py-2 text-sm text-text-secondary hover:bg-surface hover:text-text-primary rounded-md transition-colors\"\n                    >\n                      <UserCircleIcon className=\"w-4 h-4\" />\n                      <span>Profile Settings</span>\n                    </button>\n                    \n                    <hr className=\"my-2 border-border\" />\n                    \n                    <button\n                      onClick={handleLogout}\n                      className=\"w-full flex items-center space-x-2 px-3 py-2 text-sm text-error hover:bg-red-50 dark:hover:bg-red-900/20 rounded-md transition-colors\"\n                    >\n                      <ArrowRightOnRectangleIcon className=\"w-4 h-4\" />\n                      <span>Sign Out</span>\n                    </button>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};